# -*- coding: utf-8 -*-
"""
Create a New POSTGIS User
Created on Wed Oct 18 14:00 2017
Last Updated: 2017-12-19
@author: Leif Holmquist

This script will create a new user and grant them read-only access to the database
determined by the group role assigned to the newly created user.
The user will be prompted in the command prompt.
The user must input the name of the new user. Both first and last name.
The password will be autogenerated based on the users name and current year.
The user must input the name of the group role to assign the new user.

If something is wrong with the connection, please check the following inputs
contained within the script:
dbName
adminName
adminPass
hostIp
portNumb

"""

# load the adapter
import sys
import psycopg2
import traceback
import datetime

# load the psycopg extras module
import psycopg2.extras

try:
    # Input variables
    dbName = "" # Database name
    adminName = "" # Superuser name
    adminPass = "" # Superuser password
    hostIp = "" # Host IP
    portNumb = 5432 # Port number, default


    # Connects to the database
    conn = psycopg2.connect(dbname=dbName, user=adminName, host=hostIp, password=adminPass,port=portNumb)
    print ("Database Connected!\n")

# Error check
except psycopg2.Error as e:
    print ("Unable to connect to the Database.\n")
    print (e)
    #print (e.pgcode)
    #print (e.pgerror)
    #print (traceback.format_exc())
    print ("Press Enter to exit...")
    input()

cur = conn.cursor()
try:
    # Required input
    firstName = input("Enter user first name: ") # Users firstname
    print ("First Name: %s" % firstName)
    lastName = input("Enter user last name: ") # Users lastname
    print ("Last Name: %s" % lastName)

    userName = str.lower(firstName[0:4] + lastName[0:3]) # Username to be created
    print ("Username = u_%s" % userName)

    validity = input("Should this user have an expiry time? (y/n): ")

    if validity in ("y", "Y", "Yes", "yes"):
        validTime = input("Please enter date when this user should expire (yyyy-mm-dd): ")
        print ("User valid until: %s" % validTime)
    else:
        validTime = 'infinity'

    now = datetime.datetime.now()
    year = str(now.year)

    passWord = userName + year # User password to be created
    print ("Password = %s" % passWord)

    groupRole = input("Please input the name of the group role you wish to assign to this user: ") # Read-only Group Role to be designated
    print("Group role entered: %s" % groupRole)
    input("Press ENTER to continue...")

    # Creates user
    cur.execute("""CREATE ROLE u_%s WITH LOGIN PASSWORD '%s' NOSUPERUSER INHERIT NOCREATEDB NOCREATEROLE NOREPLICATION VALID UNTIL '%s';""" % (userName, passWord, validTime))
    conn.commit()
    print ("User u_%s Created!\n" % userName)

    # Grants user read-only access to entire database schema(s)
    cur.execute("""GRANT %s TO u_%s;""" % (groupRole, userName))
    conn.commit()
    print ("User granted role %s.\n" % groupRole)

    # Closes database connection
    conn.close()
    print ("Database Connection Closed!\n")
    input("Press Enter to exit...")

# Error check
except psycopg2.Error as f:
    print ("User can't be created!")
    #print f
    print (f.pgcode)
    print (f.pgerror)
    print ("Press Enter to exit...")
    input()
